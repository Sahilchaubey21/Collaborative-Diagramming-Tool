{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\DRAW\\\\frontend\\\\src\\\\components\\\\DiagramEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { diagrams, chat, auth } from '../api';\nimport { useAuth } from '../contexts/AuthContext';\nimport Canvas from './Canvas';\nimport Toolbar from './Toolbar';\nimport DiagramChat from './DiagramChat';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiagramEditor = () => {\n  _s();\n  const {\n    diagramId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  const [activeTool, setActiveTool] = useState('select');\n  // Check if creating a new diagram\n  const isNewDiagram = !diagramId || diagramId === 'new';\n  const [currentDiagram, setCurrentDiagram] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [saveStatus, setSaveStatus] = useState('saved'); // 'saved', 'unsaved', 'saving', 'error'\n  const [diagramTitle, setDiagramTitle] = useState('Untitled Diagram');\n  const canvasRef = useRef(null);\n  const autoSaveTimeoutRef = useRef(null);\n  const lastSaveDataRef = useRef(null);\n  const [chatOpen, setChatOpen] = useState(false);\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/auth');\n      return;\n    }\n\n    // Load diagram if editing existing one\n    if (!isNewDiagram) {\n      loadDiagram();\n    } else {\n      // Create new diagram with unique name\n      generateUniqueDiagramName();\n    }\n\n    // Add keyboard shortcut for save (Ctrl+S)\n    const handleKeyDown = e => {\n      if (e.ctrlKey && e.key === 's') {\n        e.preventDefault();\n        handleSaveClick();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n\n    // Cleanup function\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      // Clear any pending auto-save\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n      }\n    };\n  }, [diagramId, isAuthenticated, navigate, isNewDiagram]);\n  const loadDiagram = async () => {\n    try {\n      const diagramData = await diagrams.getById(diagramId);\n      setCurrentDiagram(diagramData);\n      setDiagramTitle(diagramData.title);\n    } catch (error) {\n      console.error('Error loading diagram:', error);\n      setSaveStatus('error');\n    }\n  };\n  const generateUniqueDiagramName = async () => {\n    try {\n      // Fetch all existing diagrams to check for naming conflicts\n      const existingDiagrams = await diagrams.getAll(0, 100); // Get up to 100 diagrams\n\n      let uniqueTitle = 'Untitled Diagram';\n      let counter = 1;\n\n      // Check if base name exists\n      const baseNameExists = existingDiagrams.some(diagram => diagram.title === 'Untitled Diagram');\n      if (baseNameExists) {\n        // Find the next available number\n        while (existingDiagrams.some(diagram => diagram.title === `Untitled Diagram ${counter}`)) {\n          counter++;\n        }\n        uniqueTitle = `Untitled Diagram ${counter}`;\n      }\n\n      // Create new diagram with unique name\n      setCurrentDiagram({\n        title: uniqueTitle,\n        description: '',\n        diagram_data: {\n          elements: [],\n          canvas_state: {}\n        }\n      });\n      setDiagramTitle(uniqueTitle);\n    } catch (error) {\n      console.error('Error generating unique diagram name:', error);\n      // Fallback to default name if API call fails\n      setCurrentDiagram({\n        title: 'Untitled Diagram',\n        description: '',\n        diagram_data: {\n          elements: [],\n          canvas_state: {}\n        }\n      });\n      setDiagramTitle('Untitled Diagram');\n    }\n  };\n  const saveDiagram = useCallback(async (canvasData, isAutoSave = false) => {\n    if (!currentDiagram) return;\n\n    // Prevent multiple simultaneous saves\n    if (saving) {\n      console.log('Save already in progress, skipping...');\n      return;\n    }\n    setSaving(true);\n    setSaveStatus('saving');\n    try {\n      const updateData = {\n        title: diagramTitle,\n        description: currentDiagram.description || '',\n        diagram_data: {\n          elements: canvasData || [],\n          canvas_state: {\n            width: 800,\n            height: 600,\n            zoom: 1,\n            panX: 0,\n            panY: 0\n          }\n        },\n        is_public: currentDiagram.is_public || false,\n        collaborators: currentDiagram.collaborators || []\n      };\n      let result;\n      if (isNewDiagram && !currentDiagram._id) {\n        // Create new diagram\n        result = await diagrams.create(updateData);\n        setCurrentDiagram(result);\n        // Update URL to include the new diagram ID\n        navigate(`/editor/${result._id}`, {\n          replace: true\n        });\n      } else {\n        // Update existing diagram\n        const targetId = currentDiagram._id || diagramId;\n        result = await diagrams.update(targetId, updateData);\n        setCurrentDiagram(result);\n      }\n\n      // Store the last successful save data\n      lastSaveDataRef.current = JSON.stringify(canvasData);\n      setSaveStatus('saved');\n    } catch (error) {\n      console.error('Error saving diagram:', error);\n      setSaveStatus('error');\n\n      // Auto-retry for auto-saves after 5 seconds\n      if (isAutoSave) {\n        setTimeout(() => {\n          setSaveStatus('unsaved');\n        }, 5000);\n      }\n    } finally {\n      setSaving(false);\n    }\n  }, [currentDiagram, diagramTitle, isNewDiagram, diagramId, navigate]);\n  const handleSaveClick = useCallback(() => {\n    if (canvasRef.current && canvasRef.current.getCanvasData) {\n      // Clear any pending auto-save since we're doing manual save\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n        autoSaveTimeoutRef.current = null;\n      }\n      const canvasData = canvasRef.current.getCanvasData();\n      saveDiagram(canvasData, false);\n    }\n  }, [saveDiagram]);\n  const handleAutoSave = useCallback(canvasData => {\n    // Don't auto-save if already saving or if data hasn't changed\n    if (saving) return;\n    const currentDataString = JSON.stringify(canvasData);\n    if (currentDataString === lastSaveDataRef.current) {\n      return; // No changes to save\n    }\n    setSaveStatus('unsaved');\n\n    // Clear previous auto-save timeout\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n    }\n\n    // Set new auto-save timeout\n    autoSaveTimeoutRef.current = setTimeout(() => {\n      // Re-check conditions before auto-saving\n      if (!saving) {\n        saveDiagram(canvasData, true);\n      }\n      autoSaveTimeoutRef.current = null;\n    }, 3000); // Auto-save after 3 seconds of inactivity\n  }, [saving, saveDiagram]);\n  const handleLogout = async () => {\n    if (saveStatus === 'unsaved') {\n      const confirmLogout = window.confirm('You have unsaved changes. Are you sure you want to logout?');\n      if (!confirmLogout) return;\n    }\n    navigate('/dashboard');\n  };\n  const getSaveButtonText = () => {\n    switch (saveStatus) {\n      case 'saving':\n        return 'Saving...';\n      case 'unsaved':\n        return 'Save Changes';\n      case 'error':\n        return 'Save Failed - Retry';\n      default:\n        return 'Saved';\n    }\n  };\n  const getSaveButtonClass = () => {\n    const baseClass = 'px-4 py-2 text-sm font-medium rounded-lg transition-colors';\n    switch (saveStatus) {\n      case 'saving':\n        return `${baseClass} bg-yellow-500 text-white cursor-not-allowed`;\n      case 'unsaved':\n        return `${baseClass} bg-blue-600 text-white hover:bg-blue-700`;\n      case 'error':\n        return `${baseClass} bg-red-600 text-white hover:bg-red-700`;\n      default:\n        return `${baseClass} bg-green-600 text-white cursor-default`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between px-6 py-4 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/my-diagrams\",\n          className: \"text-blue-600 hover:text-blue-800\",\n          children: \"\\u2190 Back to Diagrams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: diagramTitle,\n            onChange: e => {\n              setDiagramTitle(e.target.value);\n              setSaveStatus('unsaved');\n            },\n            className: \"text-xl font-bold text-gray-800 bg-transparent border-none outline-none hover:bg-gray-50 focus:bg-white focus:ring-2 focus:ring-blue-500 rounded px-2 py-1\",\n            placeholder: \"Diagram Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), currentDiagram && currentDiagram.collaborators && currentDiagram.collaborators.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1 bg-blue-100 text-blue-700 px-2 py-1 rounded-full text-xs font-medium\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-3 h-3\",\n              fill: \"currentColor\",\n              viewBox: \"0 0 20 20\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), \"Shared (\", currentDiagram.collaborators.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), currentDiagram && currentDiagram.is_public && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1 bg-green-100 text-green-700 px-2 py-1 rounded-full text-xs font-medium\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-3 h-3\",\n              fill: \"currentColor\",\n              viewBox: \"0 0 20 20\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fillRule: \"evenodd\",\n                d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM4.332 8.027a6.012 6.012 0 011.912-2.706C6.512 5.73 6.974 6 7.5 6A1.5 1.5 0 019 7.5V8a2 2 0 004 0 2 2 0 011.523-1.943A5.977 5.977 0 0116 10c0 .34-.028.675-.083 1H15a2 2 0 00-2 2v2.197A5.973 5.973 0 0110 16v-2a2 2 0 00-2-2 2 2 0 01-2-2 2 2 0 00-1.668-1.973z\",\n                clipRule: \"evenodd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), \"Public\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [saveStatus === 'unsaved' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-orange-600\",\n            children: \"\\u25CF Unsaved changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), saveStatus === 'saved' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-green-600\",\n            children: \"\\u2713 All changes saved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), saveStatus === 'error' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-red-600\",\n            children: \"\\u26A0 Save failed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveClick,\n          disabled: saving || saveStatus === 'saved',\n          className: getSaveButtonClass(),\n          children: [saving && /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              className: \"opacity-25\",\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\",\n              stroke: \"currentColor\",\n              strokeWidth: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"opacity-75\",\n              fill: \"currentColor\",\n              d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), getSaveButtonText()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      activeTool: activeTool,\n      onToolChange: setActiveTool\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-6\",\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        ref: canvasRef,\n        activeTool: activeTool,\n        diagramId: diagramId,\n        initialData: currentDiagram === null || currentDiagram === void 0 ? void 0 : currentDiagram.diagram_data,\n        onCanvasChange: handleAutoSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiagramChat, {\n      diagramId: diagramId,\n      isOpen: chatOpen,\n      onToggle: () => setChatOpen(!chatOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(DiagramEditor, \"+pMz+UHCy9itLlGA4BMvVhYC/vg=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = DiagramEditor;\nexport default DiagramEditor;\nvar _c;\n$RefreshReg$(_c, \"DiagramEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Link","useParams","useNavigate","diagrams","chat","auth","useAuth","Canvas","Toolbar","DiagramChat","Header","jsxDEV","_jsxDEV","DiagramEditor","_s","diagramId","navigate","user","isAuthenticated","activeTool","setActiveTool","isNewDiagram","currentDiagram","setCurrentDiagram","saving","setSaving","saveStatus","setSaveStatus","diagramTitle","setDiagramTitle","canvasRef","autoSaveTimeoutRef","lastSaveDataRef","chatOpen","setChatOpen","loadDiagram","generateUniqueDiagramName","handleKeyDown","e","ctrlKey","key","preventDefault","handleSaveClick","document","addEventListener","removeEventListener","current","clearTimeout","diagramData","getById","title","error","console","existingDiagrams","getAll","uniqueTitle","counter","baseNameExists","some","diagram","description","diagram_data","elements","canvas_state","saveDiagram","canvasData","isAutoSave","log","updateData","width","height","zoom","panX","panY","is_public","collaborators","result","_id","create","replace","targetId","update","JSON","stringify","setTimeout","getCanvasData","handleAutoSave","currentDataString","handleLogout","confirmLogout","window","confirm","getSaveButtonText","getSaveButtonClass","baseClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","type","value","onChange","target","placeholder","length","fill","viewBox","d","fillRule","clipRule","onClick","disabled","cx","cy","r","stroke","strokeWidth","onToolChange","ref","initialData","onCanvasChange","isOpen","onToggle","_c","$RefreshReg$"],"sources":["D:/Downloads/DRAW/frontend/src/components/DiagramEditor.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { diagrams, chat, auth } from '../api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport Canvas from './Canvas';\r\nimport Toolbar from './Toolbar';\r\nimport DiagramChat from './DiagramChat';\r\nimport Header from './Header';\r\n\r\nconst DiagramEditor = () => {\r\n  const { diagramId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user, isAuthenticated } = useAuth();\r\n  const [activeTool, setActiveTool] = useState('select');\r\n  // Check if creating a new diagram\r\n  const isNewDiagram = !diagramId || diagramId === 'new';\r\n  const [currentDiagram, setCurrentDiagram] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [saveStatus, setSaveStatus] = useState('saved'); // 'saved', 'unsaved', 'saving', 'error'\r\n  const [diagramTitle, setDiagramTitle] = useState('Untitled Diagram');\r\n  const canvasRef = useRef(null);\r\n  const autoSaveTimeoutRef = useRef(null);\r\n  const lastSaveDataRef = useRef(null);\r\n  const [chatOpen, setChatOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate('/auth');\r\n      return;\r\n    }\r\n    \r\n    // Load diagram if editing existing one\r\n    if (!isNewDiagram) {\r\n      loadDiagram();\r\n    } else {\r\n      // Create new diagram with unique name\r\n      generateUniqueDiagramName();\r\n    }\r\n\r\n    // Add keyboard shortcut for save (Ctrl+S)\r\n    const handleKeyDown = (e) => {\r\n      if (e.ctrlKey && e.key === 's') {\r\n        e.preventDefault();\r\n        handleSaveClick();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n      // Clear any pending auto-save\r\n      if (autoSaveTimeoutRef.current) {\r\n        clearTimeout(autoSaveTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [diagramId, isAuthenticated, navigate, isNewDiagram]);\r\n\r\n  const loadDiagram = async () => {\r\n    try {\r\n      const diagramData = await diagrams.getById(diagramId);\r\n      setCurrentDiagram(diagramData);\r\n      setDiagramTitle(diagramData.title);\r\n    } catch (error) {\r\n      console.error('Error loading diagram:', error);\r\n      setSaveStatus('error');\r\n    }\r\n  };\r\n\r\n  const generateUniqueDiagramName = async () => {\r\n    try {\r\n      // Fetch all existing diagrams to check for naming conflicts\r\n      const existingDiagrams = await diagrams.getAll(0, 100); // Get up to 100 diagrams\r\n      \r\n      let uniqueTitle = 'Untitled Diagram';\r\n      let counter = 1;\r\n      \r\n      // Check if base name exists\r\n      const baseNameExists = existingDiagrams.some(diagram => \r\n        diagram.title === 'Untitled Diagram'\r\n      );\r\n      \r\n      if (baseNameExists) {\r\n        // Find the next available number\r\n        while (existingDiagrams.some(diagram => \r\n          diagram.title === `Untitled Diagram ${counter}`\r\n        )) {\r\n          counter++;\r\n        }\r\n        uniqueTitle = `Untitled Diagram ${counter}`;\r\n      }\r\n      \r\n      // Create new diagram with unique name\r\n      setCurrentDiagram({\r\n        title: uniqueTitle,\r\n        description: '',\r\n        diagram_data: { elements: [], canvas_state: {} }\r\n      });\r\n      setDiagramTitle(uniqueTitle);\r\n    } catch (error) {\r\n      console.error('Error generating unique diagram name:', error);\r\n      // Fallback to default name if API call fails\r\n      setCurrentDiagram({\r\n        title: 'Untitled Diagram',\r\n        description: '',\r\n        diagram_data: { elements: [], canvas_state: {} }\r\n      });\r\n      setDiagramTitle('Untitled Diagram');\r\n    }\r\n  };\r\n\r\n  const saveDiagram = useCallback(async (canvasData, isAutoSave = false) => {\r\n    if (!currentDiagram) return;\r\n    \r\n    // Prevent multiple simultaneous saves\r\n    if (saving) {\r\n      console.log('Save already in progress, skipping...');\r\n      return;\r\n    }\r\n    \r\n    setSaving(true);\r\n    setSaveStatus('saving');\r\n    \r\n    try {\r\n      const updateData = {\r\n        title: diagramTitle,\r\n        description: currentDiagram.description || '',\r\n        diagram_data: {\r\n          elements: canvasData || [],\r\n          canvas_state: {\r\n            width: 800,\r\n            height: 600,\r\n            zoom: 1,\r\n            panX: 0,\r\n            panY: 0\r\n          }\r\n        },\r\n        is_public: currentDiagram.is_public || false,\r\n        collaborators: currentDiagram.collaborators || []\r\n      };\r\n\r\n      let result;\r\n      if (isNewDiagram && !currentDiagram._id) {\r\n        // Create new diagram\r\n        result = await diagrams.create(updateData);\r\n        setCurrentDiagram(result);\r\n        // Update URL to include the new diagram ID\r\n        navigate(`/editor/${result._id}`, { replace: true });\r\n      } else {\r\n        // Update existing diagram\r\n        const targetId = currentDiagram._id || diagramId;\r\n        result = await diagrams.update(targetId, updateData);\r\n        setCurrentDiagram(result);\r\n      }\r\n      \r\n      // Store the last successful save data\r\n      lastSaveDataRef.current = JSON.stringify(canvasData);\r\n      \r\n      setSaveStatus('saved');\r\n      \r\n    } catch (error) {\r\n      console.error('Error saving diagram:', error);\r\n      setSaveStatus('error');\r\n      \r\n      // Auto-retry for auto-saves after 5 seconds\r\n      if (isAutoSave) {\r\n        setTimeout(() => {\r\n          setSaveStatus('unsaved');\r\n        }, 5000);\r\n      }\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }, [currentDiagram, diagramTitle, isNewDiagram, diagramId, navigate]);\r\n\r\n  const handleSaveClick = useCallback(() => {\r\n    if (canvasRef.current && canvasRef.current.getCanvasData) {\r\n      // Clear any pending auto-save since we're doing manual save\r\n      if (autoSaveTimeoutRef.current) {\r\n        clearTimeout(autoSaveTimeoutRef.current);\r\n        autoSaveTimeoutRef.current = null;\r\n      }\r\n      \r\n      const canvasData = canvasRef.current.getCanvasData();\r\n      saveDiagram(canvasData, false);\r\n    }\r\n  }, [saveDiagram]);\r\n\r\n  const handleAutoSave = useCallback((canvasData) => {\r\n    // Don't auto-save if already saving or if data hasn't changed\r\n    if (saving) return;\r\n    \r\n    const currentDataString = JSON.stringify(canvasData);\r\n    if (currentDataString === lastSaveDataRef.current) {\r\n      return; // No changes to save\r\n    }\r\n    \r\n    setSaveStatus('unsaved');\r\n    \r\n    // Clear previous auto-save timeout\r\n    if (autoSaveTimeoutRef.current) {\r\n      clearTimeout(autoSaveTimeoutRef.current);\r\n    }\r\n    \r\n    // Set new auto-save timeout\r\n    autoSaveTimeoutRef.current = setTimeout(() => {\r\n      // Re-check conditions before auto-saving\r\n      if (!saving) {\r\n        saveDiagram(canvasData, true);\r\n      }\r\n      autoSaveTimeoutRef.current = null;\r\n    }, 3000); // Auto-save after 3 seconds of inactivity\r\n  }, [saving, saveDiagram]);\r\n\r\n  const handleLogout = async () => {\r\n    if (saveStatus === 'unsaved') {\r\n      const confirmLogout = window.confirm('You have unsaved changes. Are you sure you want to logout?');\r\n      if (!confirmLogout) return;\r\n    }\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  const getSaveButtonText = () => {\r\n    switch (saveStatus) {\r\n      case 'saving': return 'Saving...';\r\n      case 'unsaved': return 'Save Changes';\r\n      case 'error': return 'Save Failed - Retry';\r\n      default: return 'Saved';\r\n    }\r\n  };\r\n\r\n  const getSaveButtonClass = () => {\r\n    const baseClass = 'px-4 py-2 text-sm font-medium rounded-lg transition-colors';\r\n    switch (saveStatus) {\r\n      case 'saving':\r\n        return `${baseClass} bg-yellow-500 text-white cursor-not-allowed`;\r\n      case 'unsaved':\r\n        return `${baseClass} bg-blue-600 text-white hover:bg-blue-700`;\r\n      case 'error':\r\n        return `${baseClass} bg-red-600 text-white hover:bg-red-700`;\r\n      default:\r\n        return `${baseClass} bg-green-600 text-white cursor-default`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-white\">\r\n      <Header />\r\n      \r\n      {/* Diagram-specific header */}\r\n      <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-200\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <Link to=\"/my-diagrams\" className=\"text-blue-600 hover:text-blue-800\">\r\n            ← Back to Diagrams\r\n          </Link>\r\n          <div className=\"flex items-center gap-2\">\r\n            <input\r\n              type=\"text\"\r\n              value={diagramTitle}\r\n              onChange={(e) => {\r\n                setDiagramTitle(e.target.value);\r\n                setSaveStatus('unsaved');\r\n              }}\r\n              className=\"text-xl font-bold text-gray-800 bg-transparent border-none outline-none hover:bg-gray-50 focus:bg-white focus:ring-2 focus:ring-blue-500 rounded px-2 py-1\"\r\n              placeholder=\"Diagram Title\"\r\n            />\r\n            {/* Shared Indicator */}\r\n            {currentDiagram && currentDiagram.collaborators && currentDiagram.collaborators.length > 0 && (\r\n              <div className=\"flex items-center gap-1 bg-blue-100 text-blue-700 px-2 py-1 rounded-full text-xs font-medium\">\r\n                <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\"/>\r\n                </svg>\r\n                Shared ({currentDiagram.collaborators.length})\r\n              </div>\r\n            )}\r\n            {/* Public Indicator */}\r\n            {currentDiagram && currentDiagram.is_public && (\r\n              <div className=\"flex items-center gap-1 bg-green-100 text-green-700 px-2 py-1 rounded-full text-xs font-medium\">\r\n                <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM4.332 8.027a6.012 6.012 0 011.912-2.706C6.512 5.73 6.974 6 7.5 6A1.5 1.5 0 019 7.5V8a2 2 0 004 0 2 2 0 011.523-1.943A5.977 5.977 0 0116 10c0 .34-.028.675-.083 1H15a2 2 0 00-2 2v2.197A5.973 5.973 0 0110 16v-2a2 2 0 00-2-2 2 2 0 01-2-2 2 2 0 00-1.668-1.973z\" clipRule=\"evenodd\"/>\r\n                </svg>\r\n                Public\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-4\">\r\n          {/* Save Status Indicator */}\r\n          <div className=\"flex items-center gap-2\">\r\n            {saveStatus === 'unsaved' && (\r\n              <span className=\"text-sm text-orange-600\">● Unsaved changes</span>\r\n            )}\r\n            {saveStatus === 'saved' && (\r\n              <span className=\"text-sm text-green-600\">✓ All changes saved</span>\r\n            )}\r\n            {saveStatus === 'error' && (\r\n              <span className=\"text-sm text-red-600\">⚠ Save failed</span>\r\n            )}\r\n          </div>\r\n\r\n          {/* Save Button */}\r\n          <button\r\n            onClick={handleSaveClick}\r\n            disabled={saving || saveStatus === 'saved'}\r\n            className={getSaveButtonClass()}\r\n          >\r\n            {saving && (\r\n              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n            )}\r\n            {getSaveButtonText()}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Toolbar */}\r\n      <Toolbar \r\n        activeTool={activeTool} \r\n        onToolChange={setActiveTool} \r\n      />\r\n\r\n      {/* Canvas Area */}\r\n      <div className=\"flex-1 p-6\">\r\n        <Canvas \r\n          ref={canvasRef}\r\n          activeTool={activeTool} \r\n          diagramId={diagramId} \r\n          initialData={currentDiagram?.diagram_data}\r\n          onCanvasChange={handleAutoSave}\r\n        />\r\n      </div>\r\n\r\n      {/* Chat Component */}\r\n      <DiagramChat \r\n        diagramId={diagramId}\r\n        isOpen={chatOpen}\r\n        onToggle={() => setChatOpen(!chatOpen)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiagramEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}