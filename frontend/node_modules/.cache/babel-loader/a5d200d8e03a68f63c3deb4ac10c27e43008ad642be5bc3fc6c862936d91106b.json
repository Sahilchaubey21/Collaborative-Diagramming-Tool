{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\DRAW\\\\frontend\\\\src\\\\components\\\\DiagramChat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { chat, auth } from '../api';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiagramChat = ({\n  diagramId,\n  isOpen,\n  onToggle\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [sending, setSending] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [websocket, setWebsocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [editingMessage, setEditingMessage] = useState(null);\n  const [replyingTo, setReplyingTo] = useState(null);\n  const messagesEndRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n\n  // Auto-scroll to bottom when new messages arrive\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n\n  // Load initial messages when chat opens\n  useEffect(() => {\n    if (isOpen && diagramId && diagramId !== 'new') {\n      loadMessages();\n      connectWebSocket();\n    }\n    return () => {\n      if (websocket) {\n        websocket.close();\n      }\n    };\n  }, [isOpen, diagramId]);\n\n  // Manual refresh function for when WebSocket fails\n  const manualRefresh = async () => {\n    if (diagramId && diagramId !== 'new') {\n      console.log('🔄 Manually refreshing messages...');\n      await loadMessages();\n    }\n  };\n  const loadMessages = async () => {\n    if (!diagramId || diagramId === 'new') {\n      setMessages([]);\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await chat.getMessages(diagramId);\n      setMessages(response);\n    } catch (error) {\n      var _error$response;\n      console.error('Error loading messages:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403) {\n        // Access denied - might be a new diagram or no access\n        setMessages([]);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const connectWebSocket = async () => {\n    if (!user || !diagramId || diagramId === 'new') {\n      console.log('Skipping WebSocket connection for new diagram');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      // For WebSocket connections, determine the correct backend URL\n      const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n\n      // In development, try to connect to backend through the same host as the frontend\n      let wsUrl;\n      if (process.env.NODE_ENV === 'development') {\n        // Use the same host as the current page but port 8000\n        const backendHost = window.location.hostname;\n        wsUrl = `${wsProtocol}//${backendHost}:8000/ws/diagram/${diagramId}?token=${token}`;\n      } else {\n        // In production, use configured backend URL\n        const backendUrl = process.env.REACT_APP_API_URL || `${window.location.protocol}//${window.location.host}`;\n        const backendHost = backendUrl.replace(/^https?:\\/\\//, '').replace(/:\\d+$/, '');\n        wsUrl = `${wsProtocol}//${backendHost}:8000/ws/diagram/${diagramId}?token=${token}`;\n      }\n      console.log('Connecting to WebSocket:', wsUrl);\n      const ws = new WebSocket(wsUrl);\n      ws.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n      };\n      ws.onmessage = event => {\n        const data = JSON.parse(event.data);\n        console.log('🔔 WebSocket message received:', data);\n        if (data.type === 'chat_message') {\n          console.log('💬 Processing chat message:', data.data);\n          const newMsg = {\n            id: data.data.id,\n            message: data.data.message,\n            username: data.data.user.username,\n            user_id: data.data.user.id,\n            created_at: data.data.created_at,\n            is_edited: data.data.is_edited || false,\n            reactions: data.data.reactions || {},\n            reply_to: data.data.reply_to || null\n          };\n\n          // Add message to state - this will update the chat for all connected users\n          setMessages(prev => {\n            // Check if this is the sender's own message (replace temporary message)\n            const tempIndex = prev.findIndex(msg => msg.is_sending && msg.user_id === data.data.user.id && msg.message === data.data.message);\n            if (tempIndex !== -1) {\n              // Replace temporary message with real message from server\n              const updatedMessages = [...prev];\n              updatedMessages[tempIndex] = newMsg;\n              console.log('✅ Replaced temporary message with server message:', newMsg.id);\n              return updatedMessages;\n            }\n\n            // Prevent duplicate messages by checking if message already exists\n            const exists = prev.some(msg => msg.id === newMsg.id);\n            if (exists) {\n              console.log('⚠️ Message already exists, skipping duplicate:', newMsg.id);\n              return prev;\n            }\n            console.log('✅ Adding new message to chat from other user:', newMsg);\n            console.log('📊 Current messages count:', prev.length, '-> New count:', prev.length + 1);\n            return [...prev, newMsg];\n          });\n        }\n      };\n      ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        setIsConnected(false);\n      };\n      ws.onerror = error => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n      setWebsocket(ws);\n    } catch (error) {\n      console.error('Error connecting WebSocket:', error);\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || sending || !diagramId || diagramId === 'new') return;\n    try {\n      setSending(true);\n      if (editingMessage) {\n        // Edit existing message\n        const response = await chat.editMessage(diagramId, editingMessage.id, newMessage.trim());\n        setMessages(prev => prev.map(msg => msg.id === editingMessage.id ? {\n          ...msg,\n          message: response.message,\n          is_edited: response.is_edited,\n          updated_at: response.updated_at\n        } : msg));\n        cancelEditing();\n      } else {\n        // Send new message\n        if (websocket && websocket.readyState === WebSocket.OPEN) {\n          // Send via WebSocket\n          console.log('🚀 Sending message via WebSocket:', newMessage.trim());\n\n          // Add message to sender's chat immediately (optimistic update)\n          const tempMessage = {\n            id: 'temp_' + Date.now(),\n            // Temporary ID until we get real ID from broadcast\n            message: newMessage.trim(),\n            username: (user === null || user === void 0 ? void 0 : user.username) || 'You',\n            user_id: (user === null || user === void 0 ? void 0 : user._id) || 'current_user',\n            created_at: new Date().toISOString(),\n            is_edited: false,\n            reactions: {},\n            reply_to: (replyingTo === null || replyingTo === void 0 ? void 0 : replyingTo.id) || null,\n            is_sending: true // Flag to indicate this is being sent\n          };\n          setMessages(prev => [...prev, tempMessage]);\n          websocket.send(JSON.stringify({\n            type: 'chat_message',\n            data: {\n              message: newMessage.trim(),\n              message_type: 'text',\n              reply_to: (replyingTo === null || replyingTo === void 0 ? void 0 : replyingTo.id) || null\n            }\n          }));\n          console.log('⏳ Message sent via WebSocket, others will receive broadcast...');\n        } else {\n          // Fallback to HTTP API if WebSocket not available\n          console.warn('WebSocket not connected, falling back to HTTP API');\n          const response = await chat.sendMessage(diagramId, newMessage.trim(), 'text', (replyingTo === null || replyingTo === void 0 ? void 0 : replyingTo.id) || null);\n\n          // Add message to sender's chat immediately (User1 sees their own message)\n          setMessages(prev => [...prev, {\n            id: response.id,\n            message: response.message,\n            username: response.username,\n            user_id: response.user_id,\n            created_at: response.created_at,\n            is_edited: response.is_edited,\n            reactions: response.reactions || {},\n            reply_to: response.reply_to\n          }]);\n\n          // Note: Other users (User2, User3, etc.) will need to manually refresh or \n          // have their own refresh mechanism to see this message since WebSocket is not available\n          console.log('💬 Message sent via HTTP API - other users may need to refresh to see it');\n        }\n        cancelReply();\n      }\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setSending(false);\n    }\n  };\n  const deleteMessage = async messageId => {\n    try {\n      await chat.deleteMessage(diagramId, messageId);\n      // Remove message from local state\n      setMessages(prev => prev.filter(msg => msg.id !== messageId));\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n  const startEditing = message => {\n    setEditingMessage(message);\n    setNewMessage(message.message);\n  };\n  const cancelEditing = () => {\n    setEditingMessage(null);\n    setNewMessage('');\n  };\n  const startReply = message => {\n    setReplyingTo(message);\n  };\n  const cancelReply = () => {\n    setReplyingTo(null);\n  };\n  const addReaction = async (messageId, emoji) => {\n    try {\n      await chat.addReaction(diagramId, messageId, emoji);\n      // Update local state - this will be replaced by WebSocket update\n      setMessages(prev => prev.map(msg => {\n        if (msg.id === messageId) {\n          const reactions = {\n            ...msg.reactions\n          };\n          if (!reactions[emoji]) reactions[emoji] = [];\n          const userIndex = reactions[emoji].indexOf(user === null || user === void 0 ? void 0 : user.id);\n          if (userIndex > -1) {\n            reactions[emoji].splice(userIndex, 1);\n            if (reactions[emoji].length === 0) delete reactions[emoji];\n          } else {\n            reactions[emoji].push(user === null || user === void 0 ? void 0 : user.id);\n          }\n          return {\n            ...msg,\n            reactions\n          };\n        }\n        return msg;\n      }));\n    } catch (error) {\n      console.error('Error adding reaction:', error);\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now - date;\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMins / 60);\n    const diffDays = Math.floor(diffHours / 24);\n    if (diffDays > 0) {\n      return date.toLocaleDateString();\n    } else if (diffHours > 0) {\n      return `${diffHours}h ago`;\n    } else if (diffMins > 0) {\n      return `${diffMins}m ago`;\n    } else {\n      return 'now';\n    }\n  };\n  if (!isOpen) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onToggle,\n      className: \"fixed bottom-6 right-6 bg-blue-500 hover:bg-blue-600 text-white rounded-full p-3 shadow-lg transition-colors\",\n      title: \"Open Chat\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-6 h-6\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-6 right-6 w-80 h-96 bg-white border border-gray-300 rounded-lg shadow-lg flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-3 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-5 h-5 text-blue-500\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium text-gray-800\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`,\n          title: isConnected ? 'Real-time connected' : 'Offline - messages may be delayed'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-500\",\n          children: isConnected ? 'Live' : 'Offline'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: manualRefresh,\n          className: \"text-gray-400 hover:text-blue-500 transition-colors p-1\",\n          title: \"Refresh messages\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onToggle,\n          className: \"text-gray-400 hover:text-gray-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-5 h-5\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-3 space-y-2\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full text-gray-500 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-12 h-12 mb-2 text-gray-300\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs\",\n          children: \"Start a conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.user_id === (user === null || user === void 0 ? void 0 : user.id) ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-xs px-3 py-2 rounded-lg text-sm ${message.user_id === (user === null || user === void 0 ? void 0 : user.id) ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'} ${message.is_sending ? 'opacity-60' : 'opacity-100'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-xs font-medium ${message.user_id === (user === null || user === void 0 ? void 0 : user.id) ? 'text-blue-100' : 'text-gray-600'}`,\n              children: message.user_id === (user === null || user === void 0 ? void 0 : user.id) ? 'You' : message.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-1\",\n              children: [message.is_sending ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-400\",\n                children: \"Sending...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-xs ${message.user_id === (user === null || user === void 0 ? void 0 : user.id) ? 'text-blue-100' : 'text-gray-500'}`,\n                children: formatTime(message.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this), message.user_id === (user === null || user === void 0 ? void 0 : user.id) && !message.is_sending && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteMessage(message.id),\n                className: \"text-xs opacity-70 hover:opacity-100\",\n                title: \"Delete message\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"p-3 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type a message...\",\n          disabled: sending || diagramId === 'new',\n          className: \"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm disabled:bg-gray-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !newMessage.trim() || sending || diagramId === 'new',\n          className: \"px-3 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\",\n          children: sending ? /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"animate-spin h-4 w-4\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              className: \"opacity-25\",\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\",\n              stroke: \"currentColor\",\n              strokeWidth: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"opacity-75\",\n              fill: \"currentColor\",\n              d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 5\n  }, this);\n};\n_s(DiagramChat, \"3poCiCkkXXe+qEFg+/Faf10TxUo=\", false, function () {\n  return [useAuth];\n});\n_c = DiagramChat;\nexport default DiagramChat;\nvar _c;\n$RefreshReg$(_c, \"DiagramChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","chat","auth","useAuth","jsxDEV","_jsxDEV","DiagramChat","diagramId","isOpen","onToggle","_s","messages","setMessages","newMessage","setNewMessage","sending","setSending","loading","setLoading","websocket","setWebsocket","isConnected","setIsConnected","editingMessage","setEditingMessage","replyingTo","setReplyingTo","messagesEndRef","user","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadMessages","connectWebSocket","close","manualRefresh","console","log","response","getMessages","error","_error$response","status","token","localStorage","getItem","wsProtocol","window","location","protocol","wsUrl","process","env","NODE_ENV","backendHost","hostname","backendUrl","REACT_APP_API_URL","host","replace","ws","WebSocket","onopen","onmessage","event","data","JSON","parse","type","newMsg","id","message","username","user_id","created_at","is_edited","reactions","reply_to","prev","tempIndex","findIndex","msg","is_sending","updatedMessages","exists","some","length","onclose","onerror","sendMessage","e","preventDefault","trim","editMessage","map","updated_at","cancelEditing","readyState","OPEN","tempMessage","Date","now","_id","toISOString","send","stringify","message_type","warn","cancelReply","deleteMessage","messageId","filter","startEditing","startReply","addReaction","emoji","userIndex","indexOf","splice","push","formatTime","timestamp","date","diffMs","diffMins","Math","floor","diffHours","diffDays","toLocaleDateString","onClick","className","title","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","value","onChange","target","placeholder","disabled","cx","cy","r","_c","$RefreshReg$"],"sources":["D:/Downloads/DRAW/frontend/src/components/DiagramChat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { chat, auth } from '../api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst DiagramChat = ({ diagramId, isOpen, onToggle }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [sending, setSending] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [websocket, setWebsocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [editingMessage, setEditingMessage] = useState(null);\r\n  const [replyingTo, setReplyingTo] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const { user } = useAuth();\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  // Load initial messages when chat opens\r\n  useEffect(() => {\r\n    if (isOpen && diagramId && diagramId !== 'new') {\r\n      loadMessages();\r\n      connectWebSocket();\r\n    }\r\n\r\n    return () => {\r\n      if (websocket) {\r\n        websocket.close();\r\n      }\r\n    };\r\n  }, [isOpen, diagramId]);\r\n\r\n  // Manual refresh function for when WebSocket fails\r\n  const manualRefresh = async () => {\r\n    if (diagramId && diagramId !== 'new') {\r\n      console.log('🔄 Manually refreshing messages...');\r\n      await loadMessages();\r\n    }\r\n  };\r\n\r\n  const loadMessages = async () => {\r\n    if (!diagramId || diagramId === 'new') {\r\n      setMessages([]);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      const response = await chat.getMessages(diagramId);\r\n      setMessages(response);\r\n    } catch (error) {\r\n      console.error('Error loading messages:', error);\r\n      if (error.response?.status === 403) {\r\n        // Access denied - might be a new diagram or no access\r\n        setMessages([]);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const connectWebSocket = async () => {\r\n    if (!user || !diagramId || diagramId === 'new') {\r\n      console.log('Skipping WebSocket connection for new diagram');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      // For WebSocket connections, determine the correct backend URL\r\n      const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\r\n      \r\n      // In development, try to connect to backend through the same host as the frontend\r\n      let wsUrl;\r\n      if (process.env.NODE_ENV === 'development') {\r\n        // Use the same host as the current page but port 8000\r\n        const backendHost = window.location.hostname;\r\n        wsUrl = `${wsProtocol}//${backendHost}:8000/ws/diagram/${diagramId}?token=${token}`;\r\n      } else {\r\n        // In production, use configured backend URL\r\n        const backendUrl = process.env.REACT_APP_API_URL || `${window.location.protocol}//${window.location.host}`;\r\n        const backendHost = backendUrl.replace(/^https?:\\/\\//, '').replace(/:\\d+$/, '');\r\n        wsUrl = `${wsProtocol}//${backendHost}:8000/ws/diagram/${diagramId}?token=${token}`;\r\n      }\r\n      \r\n      console.log('Connecting to WebSocket:', wsUrl);\r\n      const ws = new WebSocket(wsUrl);\r\n\r\n      ws.onopen = () => {\r\n        console.log('WebSocket connected');\r\n        setIsConnected(true);\r\n      };\r\n\r\n      ws.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        console.log('🔔 WebSocket message received:', data);\r\n        \r\n        if (data.type === 'chat_message') {\r\n          console.log('💬 Processing chat message:', data.data);\r\n          const newMsg = {\r\n            id: data.data.id,\r\n            message: data.data.message,\r\n            username: data.data.user.username,\r\n            user_id: data.data.user.id,\r\n            created_at: data.data.created_at,\r\n            is_edited: data.data.is_edited || false,\r\n            reactions: data.data.reactions || {},\r\n            reply_to: data.data.reply_to || null\r\n          };\r\n          \r\n          // Add message to state - this will update the chat for all connected users\r\n          setMessages(prev => {\r\n            // Check if this is the sender's own message (replace temporary message)\r\n            const tempIndex = prev.findIndex(msg => msg.is_sending && msg.user_id === data.data.user.id && msg.message === data.data.message);\r\n            if (tempIndex !== -1) {\r\n              // Replace temporary message with real message from server\r\n              const updatedMessages = [...prev];\r\n              updatedMessages[tempIndex] = newMsg;\r\n              console.log('✅ Replaced temporary message with server message:', newMsg.id);\r\n              return updatedMessages;\r\n            }\r\n            \r\n            // Prevent duplicate messages by checking if message already exists\r\n            const exists = prev.some(msg => msg.id === newMsg.id);\r\n            if (exists) {\r\n              console.log('⚠️ Message already exists, skipping duplicate:', newMsg.id);\r\n              return prev;\r\n            }\r\n            \r\n            console.log('✅ Adding new message to chat from other user:', newMsg);\r\n            console.log('📊 Current messages count:', prev.length, '-> New count:', prev.length + 1);\r\n            return [...prev, newMsg];\r\n          });\r\n        }\r\n      };\r\n\r\n      ws.onclose = () => {\r\n        console.log('WebSocket disconnected');\r\n        setIsConnected(false);\r\n      };\r\n\r\n      ws.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        setIsConnected(false);\r\n      };\r\n\r\n      setWebsocket(ws);\r\n    } catch (error) {\r\n      console.error('Error connecting WebSocket:', error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || sending || !diagramId || diagramId === 'new') return;\r\n\r\n    try {\r\n      setSending(true);\r\n      \r\n      if (editingMessage) {\r\n        // Edit existing message\r\n        const response = await chat.editMessage(diagramId, editingMessage.id, newMessage.trim());\r\n        setMessages(prev => prev.map(msg => \r\n          msg.id === editingMessage.id ? {\r\n            ...msg,\r\n            message: response.message,\r\n            is_edited: response.is_edited,\r\n            updated_at: response.updated_at\r\n          } : msg\r\n        ));\r\n        cancelEditing();\r\n      } else {\r\n        // Send new message\r\n        if (websocket && websocket.readyState === WebSocket.OPEN) {\r\n          // Send via WebSocket\r\n          console.log('🚀 Sending message via WebSocket:', newMessage.trim());\r\n          \r\n          // Add message to sender's chat immediately (optimistic update)\r\n          const tempMessage = {\r\n            id: 'temp_' + Date.now(), // Temporary ID until we get real ID from broadcast\r\n            message: newMessage.trim(),\r\n            username: user?.username || 'You',\r\n            user_id: user?._id || 'current_user',\r\n            created_at: new Date().toISOString(),\r\n            is_edited: false,\r\n            reactions: {},\r\n            reply_to: replyingTo?.id || null,\r\n            is_sending: true // Flag to indicate this is being sent\r\n          };\r\n          \r\n          setMessages(prev => [...prev, tempMessage]);\r\n          \r\n          websocket.send(JSON.stringify({\r\n            type: 'chat_message',\r\n            data: {\r\n              message: newMessage.trim(),\r\n              message_type: 'text',\r\n              reply_to: replyingTo?.id || null\r\n            }\r\n          }));\r\n          \r\n          console.log('⏳ Message sent via WebSocket, others will receive broadcast...');\r\n        } else {\r\n          // Fallback to HTTP API if WebSocket not available\r\n          console.warn('WebSocket not connected, falling back to HTTP API');\r\n          const response = await chat.sendMessage(\r\n            diagramId, \r\n            newMessage.trim(), \r\n            'text', \r\n            replyingTo?.id || null\r\n          );\r\n          \r\n          // Add message to sender's chat immediately (User1 sees their own message)\r\n          setMessages(prev => [...prev, {\r\n            id: response.id,\r\n            message: response.message,\r\n            username: response.username,\r\n            user_id: response.user_id,\r\n            created_at: response.created_at,\r\n            is_edited: response.is_edited,\r\n            reactions: response.reactions || {},\r\n            reply_to: response.reply_to\r\n          }]);\r\n          \r\n          // Note: Other users (User2, User3, etc.) will need to manually refresh or \r\n          // have their own refresh mechanism to see this message since WebSocket is not available\r\n          console.log('💬 Message sent via HTTP API - other users may need to refresh to see it');\r\n        }\r\n        cancelReply();\r\n      }\r\n\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const deleteMessage = async (messageId) => {\r\n    try {\r\n      await chat.deleteMessage(diagramId, messageId);\r\n      // Remove message from local state\r\n      setMessages(prev => prev.filter(msg => msg.id !== messageId));\r\n    } catch (error) {\r\n      console.error('Error deleting message:', error);\r\n    }\r\n  };\r\n\r\n  const startEditing = (message) => {\r\n    setEditingMessage(message);\r\n    setNewMessage(message.message);\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingMessage(null);\r\n    setNewMessage('');\r\n  };\r\n\r\n  const startReply = (message) => {\r\n    setReplyingTo(message);\r\n  };\r\n\r\n  const cancelReply = () => {\r\n    setReplyingTo(null);\r\n  };\r\n\r\n  const addReaction = async (messageId, emoji) => {\r\n    try {\r\n      await chat.addReaction(diagramId, messageId, emoji);\r\n      // Update local state - this will be replaced by WebSocket update\r\n      setMessages(prev => prev.map(msg => {\r\n        if (msg.id === messageId) {\r\n          const reactions = { ...msg.reactions };\r\n          if (!reactions[emoji]) reactions[emoji] = [];\r\n          \r\n          const userIndex = reactions[emoji].indexOf(user?.id);\r\n          if (userIndex > -1) {\r\n            reactions[emoji].splice(userIndex, 1);\r\n            if (reactions[emoji].length === 0) delete reactions[emoji];\r\n          } else {\r\n            reactions[emoji].push(user?.id);\r\n          }\r\n          \r\n          return { ...msg, reactions };\r\n        }\r\n        return msg;\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error adding reaction:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    const diffMs = now - date;\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMins / 60);\r\n    const diffDays = Math.floor(diffHours / 24);\r\n\r\n    if (diffDays > 0) {\r\n      return date.toLocaleDateString();\r\n    } else if (diffHours > 0) {\r\n      return `${diffHours}h ago`;\r\n    } else if (diffMins > 0) {\r\n      return `${diffMins}m ago`;\r\n    } else {\r\n      return 'now';\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return (\r\n      <button\r\n        onClick={onToggle}\r\n        className=\"fixed bottom-6 right-6 bg-blue-500 hover:bg-blue-600 text-white rounded-full p-3 shadow-lg transition-colors\"\r\n        title=\"Open Chat\"\r\n      >\r\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\r\n        </svg>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed bottom-6 right-6 w-80 h-96 bg-white border border-gray-300 rounded-lg shadow-lg flex flex-col\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between p-3 border-b border-gray-200\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <svg className=\"w-5 h-5 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\r\n          </svg>\r\n          <span className=\"font-medium text-gray-800\">Chat</span>\r\n          <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`} title={isConnected ? 'Real-time connected' : 'Offline - messages may be delayed'}></div>\r\n          <span className=\"text-xs text-gray-500\">{isConnected ? 'Live' : 'Offline'}</span>\r\n        </div>\r\n        <div className=\"flex items-center space-x-1\">\r\n          <button\r\n            onClick={manualRefresh}\r\n            className=\"text-gray-400 hover:text-blue-500 transition-colors p-1\"\r\n            title=\"Refresh messages\"\r\n          >\r\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n            </svg>\r\n          </button>\r\n          <button\r\n            onClick={onToggle}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n          >\r\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Messages Area */}\r\n      <div className=\"flex-1 overflow-y-auto p-3 space-y-2\">\r\n        {loading ? (\r\n          <div className=\"flex justify-center items-center h-full\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\r\n          </div>\r\n        ) : messages.length === 0 ? (\r\n          <div className=\"flex flex-col items-center justify-center h-full text-gray-500 text-sm\">\r\n            <svg className=\"w-12 h-12 mb-2 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\r\n            </svg>\r\n            <p>No messages yet</p>\r\n            <p className=\"text-xs\">Start a conversation!</p>\r\n          </div>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`flex ${message.user_id === user?.id ? 'justify-end' : 'justify-start'}`}\r\n            >\r\n              <div\r\n                className={`max-w-xs px-3 py-2 rounded-lg text-sm ${\r\n                  message.user_id === user?.id\r\n                    ? 'bg-blue-500 text-white'\r\n                    : 'bg-gray-200 text-gray-800'\r\n                } ${message.is_sending ? 'opacity-60' : 'opacity-100'}`}\r\n              >\r\n                <div className=\"flex items-center justify-between mb-1\">\r\n                  <span className={`text-xs font-medium ${\r\n                    message.user_id === user?.id ? 'text-blue-100' : 'text-gray-600'\r\n                  }`}>\r\n                    {message.user_id === user?.id ? 'You' : message.username}\r\n                  </span>\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    {message.is_sending ? (\r\n                      <span className=\"text-xs text-gray-400\">\r\n                        Sending...\r\n                      </span>\r\n                    ) : (\r\n                      <span className={`text-xs ${\r\n                        message.user_id === user?.id ? 'text-blue-100' : 'text-gray-500'\r\n                      }`}>\r\n                        {formatTime(message.created_at)}\r\n                      </span>\r\n                    )}\r\n                    {message.user_id === user?.id && !message.is_sending && (\r\n                      <button\r\n                        onClick={() => deleteMessage(message.id)}\r\n                        className=\"text-xs opacity-70 hover:opacity-100\"\r\n                        title=\"Delete message\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <p>{message.message}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <form onSubmit={sendMessage} className=\"p-3 border-t border-gray-200\">\r\n        <div className=\"flex space-x-2\">\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            disabled={sending || diagramId === 'new'}\r\n            className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm disabled:bg-gray-100\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!newMessage.trim() || sending || diagramId === 'new'}\r\n            className=\"px-3 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n          >\r\n            {sending ? (\r\n              <svg className=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n            ) : (\r\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiagramChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}